class ComponentManager:
    #manages projects and components

    def check_comp_exists(project_name, comp_name):

        #obtain project id from project table
        db = sqlDB("project_db")
        cursor = db.cursor

        command = "SELECT * FROM component_table WHERE `project_name` = {} AND `component_name` = {}".format(project_name, component_name)
        cursor.execute(command)
        cursor.fetchone()

        #extract project_id from cursor - UNFINISHED
        #check for project id and component name combination in component tab
        #control flow for result



    def check_project_exists(project_name):

        #check for project name in project table
        db = sqlDB("project_db")
        cursor = db.cursor

        command = "SELECT * FROM project_table WHERE `project_name` = {}".format(project_name)
        cursor.execute(command)
        cursor.fetchone()
        num_occurences = cursor.rowcount
        db.close_down()

        #control flow for output
        if num_occurences > 0:
            return True
        else:
            return False

    def deletion_permitted(username, project_name):

        if check_admin(username) == True:
            return True
        else:
            db = sqlDB("project_db")
            cursor = db.cursor


            command = SELECT

        #check whether username is admin#


        #check whether username is author of project
        #else return false
        pass

    def create_project(username, project_name):

        #check if project exists
        db = sqlDB("project_db")
        cursor = db.cursor
        # if not, construct sql query and execute

        pass

    def delete_project(username, project_name):

        if deletion_permit(username, project_name) == False:
            return " You do not have permission to delete this project."
        db = sqlDB("project_db")
        cursor = db.cursor
        #check permission



        #need to scrub vulnt_table
        #need to scrub component_table

        #construct sql query and delete all entries with matchign project id
        #then delete project from project table

        pass

    def create_component(project_name, comp_name, comp_type, comp_version):

        if check_comp_exists(project_name, comp_name) == True:
            return ("Component name is already taken")

        db = sqlDB("project_db")
        cursor = db.cursor

        #TODO: SQL
        command = "INSERT INTO table_name (`project_name`,`comp_name`, `comp_type`, `comp_version`) VALUES ({},{},{},{})".format(project_name, comp_name, comp_type, comp_version)
        cursor.execute(command)
        db.connection.commit()
        db.close_down()

        #check component now exists
        if check_comp_exists == True:
            return "Component '{}' successfully created".format(comp_name)
        else:
            return "An error has occurred"

    def delete_component(component_name):
        pass

    def alter_permitted(username, project_name):
        pass
