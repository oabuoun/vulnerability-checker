# from vuln_return import VulnReturn
from sql_init import sql_DB


class VulnDB():


    def check_cve_existence(self, cve_id):  # checks if a user exists in a database
        db = sql_DB()
        cursor = db.cursor
        command = "SELECT `CVE` FROM `vuln_table` WHERE `CVE`= '{}';".format(cve_id)
        cursor.execute(command)
        cursor.fetchone()  # ["cve_id"]
        num_occurences = cursor.rowcount
        db.close_down()
        if num_occurences > 0:
            return True  # if it exists it will return True
        else:
            return False  # if doesnt exists will return False

    def add_new_vuln(self, cve_id, CVE_description):  # creates new vuln in DB
        db = sql_DB()
        cursor = db.cursor
        if self.check_cve_existence(cve_id):
            return "{} already exists.".format(cve_id)
        else:
            command = "INSERT INTO `vuln_table`(`CVE`, `Description`) VALUES ('{}', '{}');".format(cve_id, CVE_description)
            cursor.execute(command)
            db.connection.commit()
            db.close_down()
            return "Your vulnerability has been added to the database."
