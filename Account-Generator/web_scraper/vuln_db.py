from sql_init import sql_DB


class VulnDB():

    def lookup_components(self, project_name):
        db = sql_DB()
        cursor = db.cursor

        command = "SELECT * FROM `comp_table` WHERE `project_name`='{}';".format(project_name)

        cursor.execute(command)
        project_comps = cursor.fetchall()

        db.close_down()

        output_list = []

        for component in project_comps:
            # print(component[2])
            # print(component[4])
            output_list.append(component[2] + " " + component[4])


        return output_list, project_name


    def check_cve_existence(self, cve_id):  # checks if a user exists in a database
        db = sql_DB()
        cursor = db.cursor
        command = "SELECT `CVE` FROM `vuln_table` WHERE `CVE`= '{}';".format(cve_id)
        cursor.execute(command)
        cursor.fetchone()  # ["cve_id"]
        num_occurences = cursor.rowcount
        db.close_down()
        if num_occurences > 0:
            return True  # if it exists it will return True
        else:
            return False  # if doesnt exists will return False

    def add_new_vuln(self, comonents_name ,cve_id, CVE_description, project_name):  # creates new vuln in DB
        db = sql_DB()
        cursor = db.cursor
        # CVE_description = ''.join(CVE_description)
        if self.check_cve_existence(cve_id):
            print("{} already exists.".format(cve_id))
            return "{} already exists.".format(cve_id)
        else:
            #type(comonents_name) + + type(CVE_description) + type(project_name)
            # print(CVE_description)
            command = "INSERT INTO `vuln_table`(`CVE`, `Description`, `Component_name`, `Project_name` ) VALUES ('%s', '%s', '%s', '%s');"%(cve_id, CVE_description, comonents_name, project_name)
            print(command)
            cursor.execute(command)
            db.connection.commit()
            db.close_down()
            #return "Your vulnerability has been added to the database."
